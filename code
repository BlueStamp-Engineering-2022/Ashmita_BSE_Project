#include <Servo.h>
#include <Wire.h>
#include <PN532_I2C.h>
#include <PN532.h>
#include <NfcAdapter.h>
#include <ArduinoBlue.h>
#include <SoftwareSerial.h>
#include <Adafruit_NeoPixel.h>

const int BLUETOOTH_TX = 7;
const int BLUETOOTH_RX = 8;
int button;
SoftwareSerial bluetooth(BLUETOOTH_TX, BLUETOOTH_RX);
ArduinoBlue phone(bluetooth);
  
PN532_I2C pn532i2c(Wire);
PN532 nfc(pn532i2c);
Servo myservo;
int pos = 0;
uint8_t state = 1;
static unsigned long lastupdate = 0;
static uint16_t j=0;

#define LED_PIN 10
#define LED_COUNT 32
Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  bluetooth.begin(9600);
  myservo.attach(3);
  nfc.begin();
  Serial.println("hello");
  uint32_t versiondata = nfc.getFirmwareVersion();
  if (! versiondata) {
    Serial.print("Didn't find PN532 board");
    while (1); // halt
  }
  
  // Got ok data, print it out!
  Serial.print("Found chip PN5"); Serial.println((versiondata>>24) & 0xFF, HEX); 
  Serial.print("Firmware ver. "); Serial.print((versiondata>>16) & 0xFF, DEC); 
  Serial.print('.'); Serial.println((versiondata>>8) & 0xFF, DEC);
  Serial.println("Waiting for a key");
  strip.begin();           // INITIALIZE NeoPixel strip object (REQUIRED)
  strip.show();            // Turn OFF all pixels ASAP
  strip.setBrightness(50); // set light brightness to 50

  
  nfc.setPassiveActivationRetries(0x0F);
  
  // configure board to read RFID tags
  nfc.SAMConfig();
  
}

void loop() {
  // put your main code here, to run repeatedly:
  boolean working; // boolean to check whether or not the PN532 is reading key
  String keyUid;
  uint8_t uid[] = {0,0,0,0,0,0,0};
  uint8_t uidLength;
  
  working = nfc.readPassiveTargetID(PN532_MIFARE_ISO14443A, &uid[0], &uidLength); 

  button = phone.getButton();
  
  if(working || button != -1){
    for (uint8_t i=0; i<4; i++){ // stores the hex code for the key
      keyUid += String(uid[i], HEX);
    }
    Serial.println(keyUid);
    if(keyUid == "e38f341c" || button == 123){ // checks is the key is the right one
      Serial.println(keyUid);
      // state variable that changes based on the position of the servo
      if(state == 1){ // locking the box or box is unlocked
        state = 0; // change the state to show that it has been locked
        myservo.attach(3);
        for (pos = 0; pos <= 90; pos += 1) { // goes from 0 degrees to 90 degrees
          myservo.write(pos);              // tell servo to go to position in variable 'pos'
          delay(15);                       // waits 15 ms for the servo to reach the position
        }
        myservo.detach();
      } else{ // unlocking the box or box is already locked
        state = 1; // change the state to show that it has been unlocked
        colorOff();// turn off the leds
        myservo.attach(3);
        for (pos = 90; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
          myservo.write(pos);              // tell servo to go to position in variable 'pos'
          delay(15);                       // waits 15 ms for the servo to reach the position
        }
        myservo.detach();
      }
    }
    
    delay(500);
    
  }

  if (state == 0) {
    if (millis() > lastupdate + 10) {
      rainbowCycle();
    }
  }
}

void colorOff() { // turns off the pixel
  for(int i=0; i<strip.numPixels(); i++) { // For each pixel in strip...
    strip.setPixelColor(i, strip.Color(0,0,0));         //  turn off each pixel
  }
  strip.show();
}

void rainbowCycle() { // modified from Adafruit example to make it a state machine
  for(int i=0; i< strip.numPixels(); i++) {
    strip.setPixelColor(i, Wheel(((i * 256 / strip.numPixels()) + j) & 255));
  }
  strip.show();
  j += 12;
  if(j >= 256*5) { 
    j=0;
  }
  
  lastupdate = millis(); // time for next change to the display
}

uint32_t Wheel(byte WheelPos) {
  WheelPos = 255 - WheelPos;
  if(WheelPos < 85) {
    return strip.Color(255 - WheelPos * 3, 0, WheelPos * 3);
  }
  if(WheelPos < 170) {
    WheelPos -= 85;
    return strip.Color(0, WheelPos * 3, 255 - WheelPos * 3);
  }
  WheelPos -= 170;
  return strip.Color(WheelPos * 3, 255 - WheelPos * 3, 0);
}
